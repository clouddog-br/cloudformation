---
Description: Configure DevOps Roles, Policies and Buckets
AWSTemplateFormatVersion: '2010-09-09'

Resources:
  ArtifactsBucket:
    DeletionPolicy: Delete
    Type: AWS::S3::Bucket
    Properties: 
      VersioningConfiguration:
        Status: Enabled

  AdministrationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AWSCloudFormationStackSetAdministrationRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: AssumeRole-AWSCloudFormationStackSetExecutionRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - "arn:*:iam::*:role/AWSCloudFormationStackSetExecutionRole"

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/service-role/"
      Policies:
      - PolicyName: codebuild-service
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: "*"
            Resource: "*"          
      - PolicyName: codebuild-ecr
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ecr:BatchCheckLayerAvailability
            - ecr:CompleteLayerUpload
            - ecr:GetAuthorizationToken
            - ecr:InitiateLayerUpload
            - ecr:PutImage
            - ecr:UploadLayerPart
            Resource: "*"  

  CodeDeployRole: 
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/service-role/"
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AWSCodeDeployRoleForECS
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Statement:
              - Action:
                - s3:GetObject
                - s3:GetObjectVersion
                - s3:GetBucketVersioning
                Resource: "*"
                Effect: Allow

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/service-role/"
      Policies:
      - PolicyName: codepipeline-service
        PolicyDocument:
          Statement:
          - Action:
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:UploadArchive
            - codecommit:GetUploadArchiveStatus
            - codecommit:CancelUploadArchive
            - codebuild:*
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:*         
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:PutObject
            Resource:
            - arn:aws:s3:::codepipeline*
            - arn:aws:s3:::elasticbeanstalk*
            Effect: Allow
          - Action:
            - codedeploy:CreateDeployment
            - codedeploy:GetApplicationRevision
            - codedeploy:GetDeployment
            - codedeploy:GetDeploymentConfig
            - codedeploy:RegisterApplicationRevision
            Resource: "*"
            Effect: Allow
          - Action:
            - elasticbeanstalk:*
            - ec2:*
            - elasticloadbalancing:*
            - autoscaling:*
            - cloudwatch:*
            - s3:*
            - sns:*
            - cloudformation:*
            - rds:*
            - sqs:*
            - ecs:*
            - ecr:*
            - iam:PassRole
            Resource: "*"
            Effect: Allow
          - Action:
            - lambda:InvokeFunction
            - lambda:ListFunctions
            Resource: "*"
            Effect: Allow
          Version: '2012-10-17'

  CloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /service-role/
      Policies:
        - PolicyName: cwe-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: "*"

  DenyChangesToMasterPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Policy that denies push to master branches
      Path: /
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Deny
            Action:
              - codecommit:GitPush
              - codecommit:DeleteBranch
              - codecommit:PutFile
              - codecommit:MergeBranchesByFastForward
              - codecommit:MergeBranchesBySquash
              - codecommit:MergeBranchesByThreeWay
              - codecommit:MergePullRequestByFastForward
              - codecommit:MergePullRequestBySquash
              - codecommit:MergePullRequestByThreeWay
            Resource: 
              - '*'
            Condition:
              StringEqualsIfExists:
                codecommit:References:
                  - refs/heads/master
                  - refs/heads/prod
              'Null':
                codecommit:References: false

Outputs:
  ArtifactsBucketName:
    Value:
      Ref: ArtifactsBucket
    Description: Bucket to CodeBuild artifacts
    Export:
      Name: 
        Fn::Sub: ${AWS::StackName}-ArtifactsBucketName

  CodePipelineRoleArn:
    Value: !GetAtt CodePipelineRole.Arn
    Description: CodePipeline Service Role Arn
    Export:
      Name: !Sub ${AWS::StackName}-CodePipelineRoleArn

  CodeDeployRoleArn:
    Value: !GetAtt CodeDeployRole.Arn
    Description: CodeDeploy Service Role Arn
    Export:
      Name: !Sub ${AWS::StackName}-CodeDeployRoleArn      

  CodeBuildRoleArn:
    Value: !GetAtt CodeBuildRole.Arn
    Description: CodeBuild Service Role Arn
    Export:
      Name: !Sub ${AWS::StackName}-CodeBuildRoleArn  

  CloudWatchRoleArn:
    Value: !GetAtt CloudWatchRole.Arn
    Description: CloudWatch Service Role Arn
    Export:
      Name: !Sub ${AWS::StackName}-CloudWatchRoleArn  

  DenyChangesToMasterPolicyArn:
    Value: !Ref DenyChangesToMasterPolicy
    Description: Policy that denies changes to master
    Export:
      Name: !Sub ${AWS::StackName}-DenyChangesToMasterPolicyArn         
