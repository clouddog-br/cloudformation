---
Description: Automate provisioning of CodeBuild with CodePipeline.
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  RepositoryName:
    Description: The name of the codecommit and ecr repositories
    Type: String

  ServiceName:
    Description: The name of the ECS Service
    Type: String

  ClusterName:
    Description: The name of the ECS Cluster
    Type: String

Resources:
  Bucket:
    Type: AWS::S3::Bucket

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: codebuild-service
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: "*"
            Resource: "*"          
      - PolicyName: codebuild-ecr
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ecr:BatchCheckLayerAvailability
            - ecr:CompleteLayerUpload
            - ecr:GetAuthorizationToken
            - ecr:InitiateLayerUpload
            - ecr:PutImage
            - ecr:UploadLayerPart
            Resource: "*"

  CodeDeployRole: 
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AWSCodeDeployRoleForECS
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Statement:
              - Action:
                - s3:GetObject
                - s3:GetObjectVersion
                - s3:GetBucketVersioning
                Resource: "*"
                Effect: Allow

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: codepipeline-service
        PolicyDocument:
          Statement:
          - Action:
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:UploadArchive
            - codecommit:GetUploadArchiveStatus
            - codecommit:CancelUploadArchive
            - codebuild:*
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:PutObject
            Resource:
            - arn:aws:s3:::codepipeline*
            - arn:aws:s3:::elasticbeanstalk*
            Effect: Allow
          - Action:
            - codedeploy:CreateDeployment
            - codedeploy:GetApplicationRevision
            - codedeploy:GetDeployment
            - codedeploy:GetDeploymentConfig
            - codedeploy:RegisterApplicationRevision
            Resource: "*"
            Effect: Allow
          - Action:
            - elasticbeanstalk:*
            - ec2:*
            - elasticloadbalancing:*
            - autoscaling:*
            - cloudwatch:*
            - s3:*
            - sns:*
            - cloudformation:*
            - rds:*
            - sqs:*
            - ecs:*
            - ecr:*
            - iam:PassRole
            Resource: "*"
            Effect: Allow
          - Action:
            - lambda:InvokeFunction
            - lambda:ListFunctions
            Resource: "*"
            Effect: Allow
          Version: '2012-10-17'

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildRole
    Properties:    
      Name: !Ref RepositoryName
      Description: Build application
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        PrivilegedMode: true
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: ECR_REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${RepositoryName}            
          - Name: IMAGE_TAG
            Value: latest    
          - Name: TASK_DEF_CONTAINER_NAME              
            Value: !Ref RepositoryName
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      TimeoutInMinutes: 10

  # Application:
  #   Type: AWS::CodeDeploy::Application
  #   Properties:
  #     ComputePlatform: ECS

  # DeploymentGroup:  
  #   Type: AWS::CodeDeploy::DeploymentGroup
  #   DependsOn: Application
  #   Properties:
  #     ApplicationName: !Ref Application
  #     AutoScalingGroups: 
  #       - Ref: CodeDeployAutoScalingGroups
  #     Deployment: 
  #       Description: "A sample deployment"
  #       IgnoreApplicationStopFailures: true
  #         Revision: 
  #     ServiceRoleArn: !GetAtt CodeDeployRole.Arn        
  
  CodePipeLine:
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      ArtifactStore: 
        Location: !Ref Bucket
        Type: S3
      Name: !Ref "AWS::StackName"
      RestartExecutionOnUpdate: False
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions: 
          - Name: Source
            ActionTypeId: 
              Category: Source
              Owner: AWS
              Provider: CodeCommit
              Version: 1
            Configuration:
              RepositoryName: !Ref RepositoryName
              BranchName: master
              PollForSourceChanges: False
            Region: !Ref AWS::Region
            RunOrder: 1
            OutputArtifacts:
              - Name: source-output-artifacts
        - Name: Build
          Actions:
          - Name: Build
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: 1
              Provider: CodeBuild
            OutputArtifacts:
              - Name: build-output-artifacts
            InputArtifacts:
              - Name: source-output-artifacts
            Configuration:
                ProjectName: !Ref CodeBuildProject
            RunOrder: 1     
        - Name: Deploy
          Actions:
          - Name: Deploy
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Version: 1
              Provider: ECS
            InputArtifacts:
              - Name: build-output-artifacts
            Configuration:
                ClusterName: !Ref ClusterName
                ServiceName: !Ref ServiceName
                FileName: imagedefinitions.json                  
            RunOrder: 1  

  CloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: cwe-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipeLine}  

  CloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - 'CodeCommit Repository State Change'
        resources:
          - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${RepositoryName}
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - master
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipeLine} 
          RoleArn: !GetAtt CloudWatchRole.Arn
          Id: codepipeline   

Outputs:
  CodeBuildURL:
    Value: !Sub https://console.aws.amazon.com/codebuild/home?region=${AWS::Region}#/projects/${CodeBuildProject}/view"
    Description: CodeBuild URL

  CodeBuildRoleArn:
    Value: !GetAtt CodeBuildRole.Arn
    Description: CodeBuild Service Role Arn

  CodeDeployRoleArn:
    Value: !GetAtt CodeDeployRole.Arn
    Description: CodeDeploy Service Role Arn    

  CodePipelineRoleArn:
    Value: !GetAtt CodePipelineRole.Arn
    Description: CodePipeline Service Role Arn  
